plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.ssang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	asciidoctorExtensions
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	implementation 'com.auth0:java-jwt:4.2.1'

	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.auth0:java-jwt:3.19.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'

	implementation 'org.springframework.boot:spring-boot-devtools'

	asciidoctorExtensions  'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

ext {
	snippetsDir = file('build/generated-snippets')
}
test {
	// 위에서 작성한 snippetsDir 디렉토리를 test의 output으로 구성하는 설정 -> 스니펫 조각들이 build/generated-snippets로 출력
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	dependsOn test
	configurations 'asciidoctorExtensions'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	// source가 없으면 .adoc파일을 전부 html로 만들어버림
	// source 지정시 특정 adoc만 HTML로 만든다.
	sources{
		include("**/index.adoc","**/common/*.adoc")
	}
}
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')  // (11)
}
task copyDocument(type: Copy) { // (12)
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
build {
	dependsOn copyDocument
}