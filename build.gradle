buildscript {
   ext {
      restdocsApiSpecVersion = '0.17.1' // restdocsApiSpecVersion 버전 변수 설정
   }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"

   //restdocs-api-spec → restdocs extension  포함함
   id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"

   //swagger generator 플러그인 추가
   id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.ssang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	implementation 'com.auth0:java-jwt:4.2.1'

	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.auth0:java-jwt:3.19.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'

	implementation 'org.springframework.boot:spring-boot-devtools'

	asciidoctorExt  'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	//restdocs-api-spec 의존성 추가
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'


	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}
test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

openapi3 {
   server = "http://tht-talk.store"
   title = "THT API 문서"
   description = "Spring REST Docs with SwaggerUI."
   version = "0.0.1"
   outputFileNamePrefix = 'open-api-3.0.1'
   format = 'json'

   // /static/docs/open-api-3.0.1.json 생성 → jar 파일만 배포할 예정이기에 build 에 출력
	outputDirectory = 'build/resources/main/static/docs'
}

// Task 및 설정 추가
// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
task GenerateSwaggerUI(type: Copy) {
   dependsOn 'openapi3'

   //기존 파일 삭제했다가, build 에 출력한 json 정적파일 복사 (안해도 됨 → local 확인용)
   	delete file('src/main/resources/static/docs/')
	copy {
		from "build/resources/main/static/docs"
		into "src/main/resources/static/docs/"

	}
}

asciidoctor {
	configurations 'asciidoctorExt'
	inputs.dir snippetsDir
	dependsOn test
//	sources{
//		include("**/index.adoc","**/common/*.adoc")
//	}
}
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}
task copyDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
   dependsOn(':openapi3')
}

// === Querydsl 빌드 옵션 (선택사항) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}